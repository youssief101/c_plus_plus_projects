#include <iostream>
#include <string>
#include <cctype>
using namespace std;

// check if a given name is a full name 
bool isValidName(str) {
  int space_ctr = 0;    // counter of spaces in a given name
  
  for (auto c : str)
    if (isspace(c))
      ++space_ctr;

  return space_ctr > 2 ? true : false;
}

// check if a name is already registered in the system 
bool isReg(string str, string (&refToSubs)[], int size) {
  for (int i = 0; i < size; ++i)
    if (str == refToSubs[i])
      return true;
  
  return false;
}

int main() {
  // prompt the user to choose an option
  int user_choice = 0;
  
  while (true) {
    cout << "1- Add subscribers to the system"
	 << "\n2- Query on subscription"
	 << "\n3- Ticket prices for guests"
	 << "\n4- Close!" << endl;

    cin >> user_choice;

    // check input is one of the four options
    if (user_choice >= 1 && user_choice <= 4)
      break;
    else
      // if not repromt the user to enter a valid number
      cerr << "Invalid option, try again ... " << endl;
  }

  switch (user_choice) {
  case 1:
    // add subscribers to the system
    const int maxSubs = 100;
    int subs_num = 0, IDs[maxSubs];
    string name, subs[maxSubs];

    while (true) {
      // get number of subscribers
      cout << "How many subscribers would you like to add? ";
      cin >> subs_num;

      // no. of subs is not more than 100 new member
      if (subs_num > 0 && subs_num <= 100)
	break;
      else
	cerr << "Invalid input, no. of subscribers must be in range of [1, 100], try again ..." << endl;
    }

    for (int i = 0; i < subs_num; ++i) {
      while (true) {
	// get name from the user
	cin >> name;
	
	// check if name is valid
	if (isValidName(name)) {
	  // check if name is registered
	  if (!isReg(name, subs, maxSubs)) {
	    // add name to the system
	    subs[i] = name;
	    giveNameID(i, subs);
	    cout << name << " is registered sucessfully" << endl;
	  } else {
	    cout << "name is already registered" << endl;
	    break;
	  }
	}
      }
    }
    
  }

  return 0;
}
